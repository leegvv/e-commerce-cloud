server:
  port: 9000
  servlet:
    context-path: /ecommerce

spring:
  application:
    name: e-commerce-gateway
  cloud:
    nacos:
      # 服务注册发现
      discovery:
        enabled: true #如果不想使用Nacos进行服务注册和发现，设置为false即可
        server-addr: 127.0.0.1:8848
        # server-addr: 127.0.0.1:8848,127.0.0.1:8849,127.0.0.1:8850
        namespace: 8732980b-d8ff-489b-9d6e-f07f8339390e
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator

  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      retries: 3
    consumer:
      auto-offset-reset: latest

  sleuth:
    sampler:
      # ProbabilityBasedSampler 抽样策略
      probability: 1.0 # 采样比例， 1.0 表示 100%， 默认为 0.1
      # RateLimitingSavpler 抽样策略，设置了限速采集， spring.sleuth.sampler.probability 属性值无效
      rate: 100 # 每秒接受的 trace 量
  zipkin:
    sender:
      type: web  # kafka
    base-url: http://localhost:9411

  main:
    allow-bean-definition-overriding: true # 因为将来会引入很多依赖，难免有重名的 bean

# 独立配置网关的数据， GatewayConfig.java中读取被监听
nacos:
  gateway:
    route:
      config:
        data-id: e-commerce-gateway-router
        group: e-commerce

# 暴露端点
management:
  endpoints:
    web:
      exposure:
        include: "*" # 需要开放的端点。默认值只打开 health 和 info 两个端点。
  endpoint:
    health:
      show-details: always
